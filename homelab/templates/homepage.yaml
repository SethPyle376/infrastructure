apiVersion: apps/v1
kind: Deployment
metadata:
  name: homepage
  labels:
    app: homepage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: homepage
  template:
    metadata:
      labels:
        app: homepage
    spec:
      serviceAccountName: homepage
      volumes:
        - name: homepage-config
          persistentVolumeClaim:
            claimName: homepage-config-pvc
      containers:
        - name: homepage
          image: "{{ .Values.images.homepage.image }}:{{ .Values.images.homepage.tag }}"
          ports:
            - containerPort: 3000
              protocol: TCP
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          volumeMounts:
            - name: homepage-config
              mountPath: /app/config
          imagePullPolicy: {{ .Values.images.homepage.imagePullPolicy }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: homepage-config-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: homepage
  labels:
    app: homepage
spec:
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  selector:
    app: homepage
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: homepage-ingress
spec:
  tls:
    - secretName: "le-cert"
    - hosts:
        - dash.sethpyle.com
  rules:
    - host: dash.sethpyle.com
      http:
        paths:
          - pathType: ImplementationSpecific
            backend:
              service:
                name: homepage
                port:
                  number: 3000
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: homepage
  namespace: homelab
---
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: homepage
  annotations:
    kubernetes.io/service-account.name: homepage
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: homepage
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
      - nodes
    verbs:
      - get
      - list
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
  - apiGroups:
      - traefik.containo.us
      - traefik.io
    resources:
      - ingressroutes
    verbs:
      - get
      - list
  - apiGroups:
      - metrics.k8s.io
    resources:
      - nodes
      - pods
    verbs:
      - get
      - list
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions/status
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: homepage
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: homepage
subjects:
  - kind: ServiceAccount
    name: homepage
    namespace: homelab
