apiVersion: apps/v1
kind: Deployment
metadata:
  name: ngircd
  labels:
    app: ngircd
spec:
  replicas: 0
  selector:
    matchLabels:
      app: ngircd
  template:
    metadata:
      labels:
        app: ngircd
    spec:
      volumes:
        - name: ngircd-config
          persistentVolumeClaim:
            claimName: ngircd-config-pvc
      containers:
        - name: ngircd
          image: "{{ .Values.images.ngircd.image }}:{{ .Values.images.ngircd.tag }}"
          ports:
            - containerPort: 6667
              protocol: TCP
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "250m"
          volumeMounts:
            - name: ngircd-config
              mountPath: /config
          imagePullPolicy: {{ .Values.images.ngircd.imagePullPolicy }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ngircd-config-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: ngircd
  labels:
    app: ngircd
spec:
  ports:
    - protocol: TCP
      port: 6667
      targetPort: 6667
  selector:
    app: ngircd
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ngircd-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  tls:
    - secretName: "le-cert"
    - hosts:
        - ngircd.sethpyle.com
  rules:
    - host: ngircd.sethpyle.com
      http:
        paths:
          - pathType: ImplementationSpecific
            backend:
              service:
                name: ngircd
                port:
                  number: 6667
