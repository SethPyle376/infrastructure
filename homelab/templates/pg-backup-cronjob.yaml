apiVersion: batch/v1
kind: CronJob
metadata:
  name: pg-backup
spec:
  schedule: "0 8,20 * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: pg-backup
            image: {{ .Values.images.pgBackup.image }}:{{ .Values.images.pgBackup.tag }}
            env:
              - name: S3_BUCKET
                value: "{{ .Values.pgBackup.s3Bucket }}"
              - name: PG_USER
                value: {{ .Values.postgres.user }}
              - name: PG_PASS
                value: {{ .Values.postgres.pass }}
              - name: PG_HOST
                value: postgres
              - name: PG_PORT
                value: "{{ .Values.postgres.port }}"
              - name: AWS_ACCESS_KEY_ID
                value: {{ .Values.aws.key }}
              - name: AWS_SECRET_ACCESS_KEY
                value: {{ .Values.aws.secret }}
              - name: AWS_DEFAULT_REGION
                value: {{ .Values.aws.defaultRegion }}
              - name: DISCORD_WEBHOOK
                value: {{ .Values.pgBackup.discordWebhook }}
            command:
            - /bin/sh
            - -c
            - cd /home/root; ls; bash do-backup.sh
            imagePullPolicy: {{ .Values.images.pgBackup.imagePullPolicy }}
          restartPolicy: OnFailure
      backoffLimit: 3