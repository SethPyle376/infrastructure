apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      volumes:
        - name: postgresdb
          persistentVolumeClaim:
            claimName: postgres-pvc-new
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
      containers:
        - name: postgres
          image: {{ .Values.images.postgres.image}}:{{ .Values.images.postgres.tag }}
          ports:
            - containerPort: {{ .Values.postgres.port }}
              protocol: TCP
          env:
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgres.pass }}
            - name: POSTGRES_USER
              value: {{ .Values.postgres.user }}
            - name: POSTGRES_DB
              value: {{ .Values.postgres.db }}
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "3Gi"
              cpu: "1"
          volumeMounts:
            - name: postgresdb
              mountPath: /var/lib/postgresql/data
          imagePullPolicy: {{ .Values.images.postgres.imagePullPolicy }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc-new
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  ports:
    - protocol: TCP
      port: {{ .Values.postgres.port }}
      targetPort: {{ .Values.postgres.port }}
  selector:
    app: postgres
  type: ClusterIP

