apiVersion: apps/v1
kind: Deployment
metadata:
  name: nitter
  labels:
    app: nitter
spec:
  replicas: 0
  selector:
    matchLabels:
      app: nitter
  template:
    metadata:
      labels:
        app: nitter
    spec:
      volumes:
        - name: nitter-config
          configMap:
            name: nitter-configmap
      containers:
        - name: nitter
          image: "{{ .Values.images.nitter.image }}:{{ .Values.images.nitter.tag }}"
          resources:
            requests:
              memory: "50Mi"
              cpu: "100m"
            limits:
              memory: "100Mi"
              cpu: "200m"
          ports:
            - containerPort: {{ .Values.nitter.port }}
              protocol: TCP
          imagePullPolicy: {{ .Values.images.nitter.imagePullPolicy }}
          volumeMounts:
            - name: nitter-config
              mountPath: /src/nitter.conf
              subPath: nitter.conf
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nitter-configmap
data:
{{ (.Files.Glob "config_files/nitter.conf").AsConfig | indent 2 }}
---
apiVersion: v1
kind: Service
metadata:
  name: nitter
  labels:
    app: nitter
spec:
  ports:
    - protocol: TCP
      port: {{ .Values.nitter.port }}
      targetPort: {{ .Values.nitter.port }}
  selector:
    app: nitter
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nitter-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  tls:
    - secretName: "le-cert"
    - hosts:
        - nitter.sethpyle.com
  rules:
    - host: nitter.sethpyle.com
      http:
        paths:
          - pathType: ImplementationSpecific
            backend:
              service:
                name: nitter
                port:
                  number: {{ .Values.nitter.port }}
